<Application x:Class="Vivit_Control_Center.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Vivit_Control_Center" xmlns:converters="clr-namespace:Vivit_Control_Center.Converters"
             xmlns:modules="clr-namespace:Vivit_Control_Center.Views.Modules"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Default language (will be replaced at runtime) -->
                <ResourceDictionary Source="/Vivit Control Center;component/Localization/Strings.en.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

            <!-- Dark theme brushes -->
            <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#FF000000"/>
            <SolidColorBrush x:Key="DarkForegroundBrush" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="DarkBorderBrush" Color="#FF2A2A2A"/>
            <SolidColorBrush x:Key="DarkControlBrush" Color="#FF111111"/>
            <SolidColorBrush x:Key="DarkControlHoverBrush" Color="#FF1C1C1C"/>
            <SolidColorBrush x:Key="DarkControlPressedBrush" Color="#FF222222"/>
            <SolidColorBrush x:Key="DarkDisabledBrush" Color="#FF7F7F7F"/>
            <SolidColorBrush x:Key="DarkSelectionBrush" Color="#FF2D6FD2"/>

            <!-- Global defaults -->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="modules:BaseSimpleModule">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="UserControl">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <!-- Panels (Grid, StackPanel, DockPanel, etc.) share Panel base type -->
            <Style TargetType="Panel">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            </Style>
            <Style TargetType="ContentControl">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="Control">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            </Style>

            <!-- Text inputs -->
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="CaretBrush" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="PasswordBox">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="CaretBrush" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="RichTextBox">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
            </Style>
            <Style TargetType="ScrollViewer">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            </Style>

            <!-- Selectables & lists -->
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="Padding" Value="6,3,4,3"/>
                <Setter Property="MinHeight" Value="28"/>
            </Style>
            <Style TargetType="ComboBoxItem">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="MinHeight" Value="24"/>
            </Style>
            <Style TargetType="ListBox">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
            </Style>
            <Style TargetType="ListView">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
            </Style>
            <Style TargetType="ListBoxItem">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkSelectionBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>
            <!-- Column headers for ListView/GridView -->
            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="6,4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,0,0,1">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Containers -->
            <Style TargetType="GroupBox">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
            </Style>
            <Style TargetType="Expander">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            </Style>
            <Style TargetType="TabControl">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
            </Style>
            <Style TargetType="TabItem">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FF1A1A1A"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ToolBars -->
            <Style TargetType="ToolBarTray">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            </Style>
            <Style TargetType="ToolBar">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>

            <!-- Menus: use a base style that both Menu and ContextMenu can share -->
            <Style x:Key="DarkMenuBase" TargetType="{x:Type MenuBase}">
                <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>
            <Style TargetType="Menu" BasedOn="{StaticResource DarkMenuBase}"/>
            <Style TargetType="ContextMenu" BasedOn="{StaticResource DarkMenuBase}"/>
            <Style TargetType="MenuItem">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            </Style>

            <!-- Dark button style definition -->
            <Style x:Key="FlatDarkButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="2"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="{StaticResource DarkControlHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="{StaticResource DarkControlPressedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Apply dark button style app-wide -->
            <Style TargetType="Button" BasedOn="{StaticResource FlatDarkButton}"/>

            <!-- Reusable dark ComboBox templates (ensures dropdown popup is dark) -->
            <Style x:Key="DarkComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="Padding" Value="6,3,4,3"/>
                <Setter Property="MinHeight" Value="28"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid MinHeight="{TemplateBinding MinHeight}">
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"/>
                                <DockPanel>
                                    <ToggleButton x:Name="DropDownToggle"
                                                  DockPanel.Dock="Right"
                                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                  Focusable="False"
                                                  Background="{StaticResource DarkControlBrush}"
                                                  BorderBrush="{StaticResource DarkBorderBrush}"
                                                  Width="20"
                                                  Padding="0">
                                        <Path Data="M 0 0 L 8 0 L 4 4 Z"
                                              Fill="{StaticResource DarkForegroundBrush}"
                                              Stretch="Uniform"
                                              Width="8" Height="6"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </ToggleButton>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      RecognizesAccessKey="True"
                                                      Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentStringFormat="{Binding SelectionBoxItemStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="Bottom"
                                       AllowsTransparency="True"
                                       Focusable="False">
                                    <Border Background="{StaticResource DarkControlBrush}"
                                            BorderBrush="{StaticResource DarkBorderBrush}"
                                            BorderThickness="1">
                                        <ScrollViewer CanContentScroll="True">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DarkComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                <Setter Property="Background" Value="{StaticResource DarkControlBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="MinHeight" Value="24"/>
                <Style.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkControlHoverBrush}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkSelectionBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Reusable dark CheckBox style with custom template -->
            <Style x:Key="DarkCheckBox" TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Width="16" Height="16" VerticalAlignment="Center">
                                    <Border x:Name="Box" Background="{StaticResource DarkControlBrush}" BorderBrush="{StaticResource DarkBorderBrush}" BorderThickness="1" CornerRadius="2"/>
                                    <Path x:Name="CheckMark" Data="M 0 6 L 4 10 L 12 0" Stroke="{StaticResource DarkForegroundBrush}" StrokeThickness="2" StrokeEndLineCap="Square" StrokeStartLineCap="Square" Stretch="Uniform" Margin="2" Visibility="Collapsed"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" Margin="6,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Box" Property="Background" Value="{StaticResource DarkControlHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Box" Property="Background" Value="#22111111"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
